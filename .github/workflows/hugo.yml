# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt update -y && sudo apt install -y git golang
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install custom chroma
        run: |
          git clone --depth 1 --branch v2.12.0 https://github.com/alecthomas/chroma.git ${{ runner.temp }}/chroma \
          && command cp -f ${{ github.workspace }}/lexers/* ${{ runner.temp }}/chroma/lexers/embedded
      - name: Install Hugo CLI
        run: |
          git clone --depth 1 --branch release-0.116.0 https://github.com/gohugoio/hugo.git ${{ runner.temp }}/hugo \
          && go mod init hugo \
          && go mod edit -replace github.com/alecthomas/chroma=${{ runner.temp }}/chroma \
          && go mod tidy \
          && go build
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          ${{ runner.temp }}/hugo/hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
